{"version":3,"sources":["components/mobilemodal.component.js","components/appheader.component.js","components/appbody.component.js","components/mainpage.component.js","utils/checkifhex.util.js","components/generatortoolbarmethod.component.js","components/generatortoolbar.component.js","utils/padzero.util.js","utils/invertcolor.util.js","components/generatortoolset.component.js","utils/hsltohex.util.js","utils/genrandomnumber.util.js","utils/genmethods/gencolorsanalogous.util.js","utils/genmethods/gencolorsmonochromatic.util.js","utils/breaknumintoparts.util.js","utils/gencolorshades.util.js","components/generatorpalette.component.js","utils/genmethods/gencolorscomplementary.util.js","utils/genmethods/gencolorssplitcomplementary.util.js","utils/genmethods/gencolorssquare.util.js","utils/genmethods/gencolorstetradic.util.js","utils/genmethods/gencolorstriadic.util.js","utils/genmethods/gencolorsrandom.util.js","components/generator.component.js","App.js","reportWebVitals.js","index.js"],"names":["MobileModal","props","useState","color","colorHsl","setColorHsl","useEffect","document","getElementsByTagName","style","overflow","visible","className","flat","to","onClick","setVisible","text","AppHeader","borderRadius","width","height","dense","backgroundColor","e","AppBody","hue","fontSize","outlined","elevation","onInput","newHue","variant","MainPage","checkifhex","test","GeneratorToolbarMethod","ref","active","setActive","opened","setOpened","wrapperRef","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","setGenMethod","elements","methods","i","push","bordered","length","borderColor","GeneratorToolbar","window","innerWidth","setWidth","isMobileWidth","setIsMobileWidth","handleWindowSizeChange","isMobile","padZero","str","len","Array","join","slice","invertColor","hex","bw","indexOf","Error","r","parseInt","g","b","toString","GeneratorToolset","styles","textColor","navigator","clipboard","writeText","size","hslToHex","h","s","l","a","Math","min","f","n","k","max","round","padStart","random","floor","genColorsAnalogous","colors","genrandomnumber","factorS","factorL","amount","genColorsMonochromatic","factor","breakIntoParts","num","parts","map","_","genColorShades","direction","shades","GeneratorPalette","setElements","colornumber","colorNumber","setColorNumber","genMethod","colorsarr","genColors","setColors","after","genColorsComplementary","chunks","breaknumintoparts","temp","genColorsSplitComplementary","genColorsSquare","genColorsTetradic","genColorsTriadic","genColorsRandom","handleGenerate","colorarr","handleKeyPress","keyCode","setTimeout","j","console","log","toUpperCase","handlers","useSwipeable","onSwipedUp","inset","Generator","location","useLocation","pathname","href","toParse","history","replace","App","setHue","interval","setInterval","clearInterval","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3579b90e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card } from 'ui-neumorphism';\r\n\r\nfunction MobileModal(props) {\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  useEffect(() => {\r\n    document.getElementsByTagName('html')[0].style.overflow = props.visible ? 'hidden' : 'initial';\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Card className={props.visible ? 'Modal-nav Modal-nav-opened' : 'Modal-nav Modal-nav-closed'} flat >\r\n      <Link to='/' className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Home</Button></Link>\r\n      <Link to=\"/generator\" className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Generate</Button></Link>\r\n      <Button text><p style={{color: colorHsl}}>Explore</p></Button>\r\n      <Button text>Sign in</Button>\r\n      <Button><p style={{color: colorHsl}}>Sign up</p></Button>\r\n      <Button onClick={() => props.setVisible(false)}>Close</Button>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MobileModal;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, Divider } from 'ui-neumorphism';\r\n\r\nimport MobileModal from './mobilemodal.component';\r\n\r\nfunction AppHeader(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <Card style={{borderRadius: 0}}>\r\n      <header className=\"App-header\">\r\n        <Link to=\"\" className=\"Link-nostyle Link-logo\"><div><h1 className=\"Logo\">poli</h1><h1 className=\"Logo\" style={{color: colorHsl}}>chroma</h1></div></Link>\r\n        <nav className=\"Nav-header\">\r\n          <ul>\r\n            <li><Link to=\"/generator\" className=\"Link-nostyle\"><Button text>Generate</Button></Link></li>\r\n            <li><Divider style={{width:'4px', height:'100%'}} dense /></li>\r\n            <li><Button text>Sign in</Button></li>\r\n            <li><Button><p style={{color: colorHsl}}>Sign up</p></Button></li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"Burger-menu\" onClick={() => setVisible(!visible)}>\r\n            <div style={{backgroundColor: colorHsl}} \r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n            <div style={{backgroundColor: colorHsl}}\r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n            <div style={{backgroundColor: colorHsl}}\r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n        </div>\r\n      </header>\r\n      <MobileModal color={props.color} setVisible = {(e) => setVisible(e)} visible = {visible}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card } from 'ui-neumorphism';\r\n\r\nimport ColorPicker from '@radial-color-picker/react-color-picker';\r\nimport '@radial-color-picker/react-color-picker/dist/react-color-picker.min.css';\r\n\r\nfunction AppBody(props) {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  const onInput = newHue => {\r\n    return;\r\n  };\r\n\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <section className=\"App-body\">\r\n      <section className=\"App-body-left\">\r\n        <p className=\"App-body-title\">Fast and easy neumorphic <b style={{color: colorHsl}}>color</b> palettes generator!</p>\r\n        <p className=\"App-body-subtitle\">Create and export perfect palette for your art project easily.</p>\r\n        <Link to=\"/generator\" className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" style={{height:'55px'}}>\r\n            <h1 style={{fontSize: '18px', color: colorHsl}}>Generate!</h1>\r\n          </Button>\r\n        </Link>\r\n        <Link to='/' className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" color={colorHsl} style={{height: '55px'}}  outlined>\r\n            <h1 style={{fontSize: '18px'}}>Explore!</h1>\r\n          </Button>\r\n        </Link>\r\n      </section>\r\n      <section className=\"App-body-right\">\r\n        <Card className=\"Color-picker-outer\" elevation={2}>\r\n          <Card className=\"Color-picker-inner\" elevation={2}></Card>\r\n          <ColorPicker hue={hue} onInput={onInput} variant={'persistent'} />\r\n        </Card>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AppBody;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport AppBody from './appbody.component';\r\n\r\nimport 'ui-neumorphism/dist/index.css';\r\n\r\nimport '../App.css';\r\n\r\nfunction MainPage(props) {\r\n\treturn (\r\n\t\t<Card className=\"App\" elevation={2}>\r\n\t    \t<AppHeader color={props.color} />\r\n\t    \t<AppBody color={props.color} />\r\n\t  \t</Card>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","export default function checkifhex(color) {\r\n    return /^[0-9A-Fa-f]{6}$/i.test(color);\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nimport { Button, Card } from 'ui-neumorphism';\r\n\r\nfunction GeneratorToolbarMethod(props) {\r\n    const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\tconst [active, setActive]     = useState(0);\r\n    const [opened, setOpened]     = useState(false);\r\n    const wrapperRef = useRef(null);\r\n\r\n    function useOutsideDetect(ref) {\r\n        useEffect(() => {\r\n            function handleClickOutside(event) {\r\n                if (ref.current && !ref.current.contains(event.target)) {\r\n                    setOpened(false);\r\n                }\r\n            }\r\n            \r\n            document.addEventListener(\"mousedown\", handleClickOutside);\r\n            document.addEventListener(\"touchstart\", handleClickOutside);\r\n            document.addEventListener(\"keydown\", handleClickOutside);\r\n            return () => {\r\n                document.removeEventListener(\"mousedown\", handleClickOutside);\r\n                document.removeEventListener(\"touchstart\", handleClickOutside);\r\n                document.removeEventListener(\"keydown\", handleClickOutside);\r\n            };\r\n        }, [ref]);\r\n    }\r\n\r\n    useOutsideDetect(wrapperRef);\r\n\r\n    useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n    useEffect(() => {\r\n        props.setGenMethod(active);\r\n    }, [active]);\r\n\r\n    let elements = [];\r\n    let methods  = ['Analogous', 'Monochromatic', 'Complementary', 'Split-Complementary',\r\n                    'Square', 'Tetradic', 'Triadic', 'Random'];\r\n\r\n    for (let i = 0; i < methods.length; i++) {\r\n        elements.push(\r\n            <Button \r\n                    className = 'Generator-toolbar-method-inner-element' \r\n                    key       = {i}\r\n                    text      = {active !== i}\r\n                    flat      = {active === i}\r\n                    bordered  = {false}\r\n                    color     = {active === i ? colorHsl : 'initial'}\r\n                    onClick   = {() => {setActive(i);setOpened(false)}}\r\n                >\r\n                    <h3>{methods[i]}</h3>\r\n                </Button>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='Generator-toolbar-method-outer'\r\n            ref={wrapperRef}\r\n        >\r\n            <div \r\n                className='Generator-toolbar-method'\r\n                style={{borderColor: colorHsl}}\r\n                onClick={() => setOpened(!opened)}\r\n            >\r\n            </div>\r\n            <Card \r\n                className={opened ? 'Generator-toolbar-method-inner opened' : 'Generator-toolbar-method-inner closed'}\r\n                flat bordered \r\n            >\r\n                {elements}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GeneratorToolbarMethod;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport isMobile from 'react-device-detect';\r\nimport GeneratorToolbarMethod from './generatortoolbarmethod.component';\r\n\r\nfunction GeneratorToolbar(props) {\r\n\tconst [width, setWidth]                 = useState(window.innerWidth);\r\n\tconst [isMobileWidth, setIsMobileWidth] = useState(width < 768);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tsetWidth(window.innerWidth);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsMobileWidth(width < 768);\r\n\t}, [width]);\r\n\r\n\treturn (\r\n\t\t<Card className='Generator-toolbar' style={{borderRadius: '0'}} flat bordered >\r\n\t\t\t<h2 className='Generator-toolbar-subtitle'>\r\n\t\t\t\t{isMobile || isMobileWidth ? \"Swipe up!\" :\r\n\t\t\t\t\t\t\t\"Press spacebar to quickly generate a new palette!\"}\r\n\t\t\t</h2>\r\n\t\t\t<div className='Generator-toolbar-tools'>\r\n\t\t\t\t<GeneratorToolbarMethod color={props.color} setGenMethod={(e) => props.setGenMethod(e)} />\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default GeneratorToolbar;","export default function padZero(str, len) {\r\n    len = len || 2;\r\n    var zeros = new Array(len).join('0');\r\n    return (zeros + str).slice(-len);\r\n}","import padZero from \"./padzero.util\";\r\n\r\nexport default function invertColor(hex, bw) {\r\n    if (hex.indexOf('#') === 0) {\r\n        hex = hex.slice(1);\r\n    }\r\n    \r\n    if (hex.length === 3) {\r\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n        throw new Error('Invalid HEX color.');\r\n    }\r\n    var r = parseInt(hex.slice(0, 2), 16),\r\n        g = parseInt(hex.slice(2, 4), 16),\r\n        b = parseInt(hex.slice(4, 6), 16);\r\n    if (bw) {\r\n        return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n            ? '#000000'\r\n            : '#FFFFFF';\r\n    }\r\n    r = (255 - r).toString(16);\r\n    g = (255 - g).toString(16);\r\n    b = (255 - b).toString(16);\r\n    \r\n    return \"#\" + padZero(r) + padZero(g) + padZero(b);\r\n}","import React from 'react';\r\n\r\nimport { FiCopy } from 'react-icons/fi';\r\n\r\nfunction GeneratorToolset(props) {\r\n    let styles = {\r\n        color: props.textColor,\r\n    };\r\n\r\n    function copyText() {\r\n        navigator.clipboard.writeText(props.color);\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className = 'Generator-palette-toolset'>\r\n            <div className = 'Generator-palette-toolset-tools'>\r\n                <div className = 'Generator-palette-toolset-icon' onClick={() => {copyText()}}>\r\n                    <FiCopy size = {'32px'} color = {props.textColor}></FiCopy>\r\n                </div>\r\n            </div>\r\n            <div className = 'Generator-palette-toolset-colorname'>\r\n                <h1 style = {styles} >\r\n                    {props.color}\r\n                </h1>\r\n            </div>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default GeneratorToolset;","export default function hslToHex(h, s, l) {\r\n    l /= 100;\r\n    const a = s * Math.min(l, 1 - l) / 100;\r\n    const f = n => {\r\n        const k = (n + h / 30) % 12;\r\n        const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\r\n        return Math.round(255 * color).toString(16).padStart(2, '0');   // convert to Hex and prefix \"0\" if needed\r\n    };\r\n    return `${f(0)}${f(8)}${f(4)}`;\r\n}","export default function random(min, max) {\r\n    return Math.floor(Math.random() * (max - min +1)) + min;\r\n} ","import hslToHex from \"../hsltohex.util\";\r\nimport genrandomnumber from \"../genrandomnumber.util\";\r\n\r\nexport default function genColorsAnalogous(n) {\r\n    let colors = [];\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(35, 65);\r\n    let l = genrandomnumber(40, 75);\r\n\r\n    while(true) {\r\n        colors = []\r\n        while (colors.length !== n) {\r\n            if (!(hslToHex(h, s, l) in colors)) {\r\n                colors.push(hslToHex(h, s, l));\r\n            }\r\n\r\n            let factorS = genrandomnumber(0, 1) ? -1 : 1;\r\n            let factorL = genrandomnumber(0, 1) ? -1 : 1;\r\n            let amount = genrandomnumber(0, 7);\r\n            \r\n            h += genrandomnumber(20, 60);\r\n            s += factorS * amount;\r\n            l += factorL * amount;\r\n\r\n            if (h > 360) {\r\n                h -= 360;\r\n            } else if (h < 0) {\r\n                h += 360;\r\n            }\r\n        }\r\n        if (colors.length === n) {\r\n            break;\r\n        }\r\n    }\r\n    \r\n    return colors;\r\n}","import genrandomnumber from \"../genrandomnumber.util\";\r\nimport hslToHex from \"../hsltohex.util\";\r\n\r\nexport default function genColorsMonochromatic(n) {\r\n    let colors = [];\r\n\r\n    let amount = genrandomnumber(7, 10);\r\n    let factor = genrandomnumber(0, 1) === 1 ? 1 : -1;\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(0, 100);\r\n    let l;\r\n    if (factor === -1) {\r\n        l = genrandomnumber(20 + n * amount, 100);\r\n    } else {\r\n        l = genrandomnumber(20, 100 - n * amount);\r\n    }\r\n    \r\n\r\n    while(true) {\r\n        colors = []\r\n        while (colors.length !== n) {\r\n            if (!(hslToHex(h, s, l) in colors)) {\r\n                colors.push(hslToHex(h, s, l));\r\n            }\r\n            l += factor * amount;\r\n        }\r\n        if (colors.length === n) {\r\n            break;\r\n        }\r\n    }\r\n    \r\n    return colors;\r\n}","export default function breakIntoParts(num, parts) {\r\n    return [...Array(parts)].map((_,i) => \r\n          0|num/parts+(i < num%parts));\r\n} ","import hslToHex from \"./hsltohex.util\";\r\n\r\nexport default function genColorShades(h, s, l, direction, amount, shades) {\r\n    let colors = [];\r\n\r\n    for (let i = 0; i < shades; i++) {\r\n        l += direction * amount;\r\n        if (l < 0) {\r\n            l += 100;\r\n        } else if (l > 100) {\r\n            l -= 100;\r\n        }\r\n        colors.push(hslToHex(h, s, l));\r\n    }\r\n\r\n    return colors;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport invertColor from '../utils/invertcolor.util';\r\nimport GeneratorToolset from './generatortoolset.component';\r\n\r\nimport genColorsAnalogous from '../utils/genmethods/gencolorsanalogous.util';\r\nimport genColorsRandom from '../utils/genmethods/gencolorsrandom.util';\r\nimport genColorsMonochromatic from '../utils/genmethods/gencolorsmonochromatic.util';\r\nimport genColorsComplementary from '../utils/genmethods/gencolorscomplementary.util';\r\nimport genColorsSplitComplementary from '../utils/genmethods/gencolorssplitcomplementary.util';\r\nimport genColorsSquare from '../utils/genmethods/gencolorssquare.util';\r\nimport genColorsTetradic from '../utils/genmethods/gencolorstetradic.util';\r\nimport genColorsTriadic from '../utils/genmethods/gencolorstriadic.util';\r\n\r\nfunction GeneratorPalette(props) {\r\n\tlet [elements, setElements]         = useState(null);\r\n\tlet [colorNumber, setColorNumber]   = useState(props.colornumber);\r\n\tlet [genMethod, setGenMethod]       = useState(props.genMethod);\r\n\tlet [colors, setColors]             = useState(() => props.colorsarr.length === 0 ?\r\n\t\t\t\t\t\t\t\t\t\t\tgenColors() : props.colorsarr);\r\n\r\n\tfunction genColors() {\r\n\t\tswitch(genMethod) {\r\n\t\t\tcase 0:\r\n\t\t\t\treturn genColorsAnalogous(colorNumber);\r\n\t\t\tcase 1:\r\n\t\t\t\treturn genColorsMonochromatic(colorNumber);\r\n\t\t\tcase 2:\r\n\t\t\t\treturn genColorsComplementary(colorNumber);\r\n\t\t\tcase 3:\r\n\t\t\t\treturn genColorsSplitComplementary(colorNumber);\r\n\t\t\tcase 4:\r\n\t\t\t\treturn genColorsSquare(colorNumber);\r\n\t\t\tcase 5:\r\n\t\t\t\treturn genColorsTetradic(colorNumber);\r\n\t\t\tcase 6:\r\n\t\t\t\treturn genColorsTriadic(colorNumber);\r\n\t\t\tcase 7:\r\n\t\t\t\treturn genColorsRandom(colorNumber);\r\n\t\t\tdefault:\r\n\t\t\t\treturn genColorsAnalogous(colorNumber);\r\n\t\t}\r\n\t}\r\n\r\n\tlet handleSwipe = () => {\r\n\t\tsetTimeout(handleGenerate(), 100);\r\n\t}\r\n\r\n\tlet handleGenerate = () => {\r\n\t\tlet colorarr = genColors();\r\n\t\tsetColors(colorarr);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tlet handleKeyPress = (target) => {\r\n\t\t\tif(target.keyCode === 32) {\r\n\t\t\t\tsetTimeout(handleGenerate(), 100);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdocument.addEventListener(\"keypress\", handleKeyPress);\r\n\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"keypress\", handleKeyPress);\r\n\t\t}\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.colorsarr.length !== 0) {\r\n\t\t\tsetColors(props.colorsarr);\r\n\t\t\tsetColorNumber(props.colornumber);\r\n\t\t}\r\n\t}, [props.colorsarr]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetGenMethod(props.genMethod);\r\n\t}, [props.genMethod]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet elements = [];\r\n\r\n\t\tlet s = \"\";\r\n\t\tlet styles = [];\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tfor (let j = 0; j < colorNumber; j++) {\r\n\t\t\t\ts += \"%c       %c \";\r\n\t\t\t\tstyles.push(`background: #${colors[j]};`);\r\n\t\t\t\tstyles.push(\"background: null\");\r\n\t\t\t}\r\n\t\t\ts += '\\n';\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(s, ...styles);\r\n\t\tconsole.log(colors.join(\"  \"));\r\n\r\n\t\tfor (let i = 0; i < colors.length; i++) {\r\n\t\t\telements.push(\r\n\t\t\t\t<div className='Generator-palette-color' key={`#${colors[i]}`} style={{backgroundColor: `#${colors[i]}`}}>\r\n\t\t\t\t\t<GeneratorToolset \r\n\t\t\t\t\t\ttextColor = {invertColor(colors[i], 1).toUpperCase()} \r\n\t\t\t\t\t\tcolor = {colors[i].toUpperCase()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetElements(elements);\r\n\t}, [colors, colorNumber]);\r\n\r\n\tconst handlers = useSwipeable({\r\n\t\tonSwipedUp: () => handleSwipe()\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='Generator-palette-outer' elevation={2} {...handlers} >\r\n\t\t\t<Card className='Generator-palette-inner' inset >\r\n\t\t\t\t{elements}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GeneratorPalette;","import genrandomnumber from \"../genrandomnumber.util\";\r\nimport hslToHex from \"../hsltohex.util\";\r\n\r\nexport default function genColorsComplementary(n) {\r\n    let colors = [];\r\n\r\n    let amount = genrandomnumber(7, 10);\r\n    let factor = 1;\r\n    let after  = genrandomnumber(0, 1) === 0 ? Math.round(n/2) : Math.floor(n/2);\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(10, 90);\r\n    let l = genrandomnumber(10, 100 - n * amount);\r\n\r\n    while(true) {\r\n        colors = []\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === after) {\r\n                factor = -1;\r\n                l = genrandomnumber(10 + n * amount, 100);\r\n                s = genrandomnumber(10, 90);\r\n\r\n                h += 180;\r\n                if (h > 360) {\r\n                    h -= 360;\r\n                }\r\n            }\r\n\r\n            if (!(hslToHex(h, s, l) in colors)) {\r\n                colors.push(hslToHex(h, s, l));\r\n            }\r\n            l += factor * amount;\r\n        }\r\n\r\n        if (colors.length === n) {\r\n            break;\r\n        }\r\n    }\r\n    \r\n    return colors;\r\n}","import genrandomnumber from '../genrandomnumber.util';\r\nimport breaknumintoparts from '../breaknumintoparts.util';\r\nimport genColorShades from '../gencolorshades.util';\r\nimport hslToHex from '../hsltohex.util';\r\n\r\nexport default function genColorsSplitComplementary(n) {\r\n    let colors = [];\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(20, 80);\r\n    let l = genrandomnumber(40, 75);\r\n\r\n    let chunks = breaknumintoparts(n, 3);\r\n    let temp = chunks[2];\r\n    chunks[2] = chunks[1];\r\n    chunks[1] = temp;\r\n\r\n    while(true) {\r\n      colors = []\r\n      \r\n      for (let i = 0; i < 3; i++) {\r\n        if (chunks[i] === 1) {\r\n          colors.push(hslToHex(h, s, l));\r\n        } else {\r\n          colors.push(hslToHex(h, s, l), ...genColorShades(h, s, l, \r\n                                     genrandomnumber(0, 1) ? -1 : 1, \r\n                                     genrandomnumber(5, 10),\r\n                                     chunks[i] - 1));\r\n        }\r\n\r\n        let isSLSame = genrandomnumber(0, 1);\r\n        \r\n        if (!isSLSame) {\r\n          s = genrandomnumber(20, 80);\r\n          l = genrandomnumber(20, 80);\r\n        }\r\n\r\n        if (i < 1) {\r\n          h += 135;\r\n          if (h > 360) {\r\n            h -= 360\r\n          }\r\n        } else {\r\n          h += 90;\r\n          if (h > 360) {\r\n            h -= 360;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (colors.length === n) {\r\n          break;\r\n      }\r\n  }\r\n\r\n    return colors;\r\n}","import genrandomnumber from '../genrandomnumber.util';\r\nimport breaknumintoparts from '../breaknumintoparts.util';\r\nimport genColorShades from '../gencolorshades.util';\r\nimport hslToHex from '../hsltohex.util';\r\n\r\nexport default function genColorsSquare(n) {\r\n    let colors = [];\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(5, 95);\r\n    let l = genrandomnumber(5, 95);\r\n\r\n    let chunks = breaknumintoparts(n, 4);\r\n\r\n    while(true) {\r\n      colors = []\r\n      \r\n      for (let i = 0; i < 4; i++) {\r\n        if (chunks[i] === 1) {\r\n          colors.push(hslToHex(h, s, l));\r\n        } else {\r\n          colors.push(hslToHex(h, s, l), ...genColorShades(h, s, l, \r\n                                     genrandomnumber(0, 1) ? -1 : 1, \r\n                                     genrandomnumber(5, 10),\r\n                                     chunks[i] - 1));\r\n        }\r\n\r\n        let isSLSame = genrandomnumber(0, 1);\r\n        \r\n        if (!isSLSame) {\r\n          s = genrandomnumber(20, 80);\r\n          l = genrandomnumber(20, 80);\r\n        }\r\n\r\n        h+= 90;\r\n\r\n        if (h > 360) {\r\n          h -= 360;\r\n        }\r\n      }\r\n\r\n      if (colors.length === n) {\r\n          break;\r\n      }\r\n  }\r\n\r\n    return colors;\r\n}","import genrandomnumber from '../genrandomnumber.util';\r\nimport breaknumintoparts from '../breaknumintoparts.util';\r\nimport genColorShades from '../gencolorshades.util';\r\nimport hslToHex from '../hsltohex.util';\r\n\r\nexport default function genColorsTetradic(n) {\r\n    let colors = [];\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(20, 80);\r\n    let l = genrandomnumber(40, 75);\r\n    let factor = 1;\r\n\r\n    let chunks = breaknumintoparts(n, 4);\r\n\r\n    while(true) {\r\n      colors = []\r\n      \r\n      for (let i = 0; i < 4; i++) {\r\n        if (chunks[i] === 1) {\r\n          colors.push(hslToHex(h, s, l));\r\n        } else {\r\n          colors.push(hslToHex(h, s, l), ...genColorShades(h, s, l, \r\n                                     factor, \r\n                                     genrandomnumber(5, 10),\r\n                                     chunks[i] - 1));\r\n          factor = factor * -1;\r\n        }\r\n\r\n        if (i % 2 === 0) {\r\n          h += 30\r\n        } else {\r\n          h += 150;\r\n        }\r\n\r\n        let isSLSame = genrandomnumber(0, 1);\r\n        \r\n        if (!isSLSame) {\r\n          s = genrandomnumber(20, 80);\r\n          l = genrandomnumber(20, 80);\r\n        }\r\n\r\n        if (h > 360) {\r\n          h -= 360;\r\n        }\r\n      }\r\n\r\n      if (colors.length === n) {\r\n          break;\r\n      }\r\n  }\r\n\r\n    return colors;\r\n}","import genrandomnumber from '../genrandomnumber.util';\r\nimport breaknumintoparts from '../breaknumintoparts.util';\r\nimport genColorShades from '../gencolorshades.util';\r\nimport hslToHex from '../hsltohex.util';\r\n\r\nexport default function genColorsTriadic(n) {\r\n    let colors = [];\r\n\r\n    let h = genrandomnumber(0, 360);\r\n    let s = genrandomnumber(20, 80);\r\n    let l = genrandomnumber(40, 75);\r\n\r\n    let factor = 1;\r\n\r\n    let chunks = breaknumintoparts(n, 3);\r\n    let temp = chunks[2];\r\n    chunks[2] = chunks[1];\r\n    chunks[1] = temp;\r\n\r\n    while(true) {\r\n      colors = []\r\n      \r\n      for (let i = 0; i < 3; i++) {\r\n        if (chunks[i] === 1) {\r\n          colors.push(hslToHex(h, s, l));\r\n        } else {\r\n          colors.push(hslToHex(h, s, l), ...genColorShades(h, s, l, \r\n                                     factor, \r\n                                     genrandomnumber(5, 10),\r\n                                     chunks[i] - 1));\r\n          factor = factor * -1;\r\n        }\r\n\r\n        let isSLSame = genrandomnumber(0, 1);\r\n        \r\n        if (!isSLSame) {\r\n          s = genrandomnumber(20, 80);\r\n          l = genrandomnumber(20, 80);\r\n        }\r\n\r\n        h += 120;\r\n\r\n        if (h > 360) {\r\n          h -= 360;\r\n        }\r\n      }\r\n\r\n      if (colors.length === n) {\r\n          break;\r\n      }\r\n  }\r\n\r\n    return colors;\r\n}","export default function genColorsRandom(n) {\r\n    let colors = [];\r\n    for (let i = 0; i < n; i++) {\r\n      colors.push(((Math.random() * 0xfffff * 1000000).toString(16)).slice(0, 6));\r\n    }\r\n    return colors;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport checkifhex from '../utils/checkifhex.util';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport GeneratorToolbar from './generatortoolbar.component';\r\nimport GeneratorPalette from './generatorpalette.component';\r\nimport genColorsMonochromatic from '../utils/genmethods/gencolorsmonochromatic.util';\r\n\r\nfunction Generator(props) {\r\n\tconst [genMethod, setGenMethod]     = useState(0);\r\n\tconst [colors, setColors]           = useState([]);\r\n\tconst [colorNumber, setColorNumber] = useState(5);\r\n\tconst location                      = useLocation();\r\n\r\n\tlet colorsarr      = [];\r\n\r\n\tuseEffect(() => {\r\n\t\tif (location.pathname !== window.location.href.slice(-10)) {\r\n\t\t\tlet toParse = location.pathname.slice(11);\r\n\t\t\tlet color = '';\r\n\t\t\tcolorsarr = [];\r\n\t\t\tfor (let i = 0; i < toParse.length; i++) {\r\n\t\t\t\tif (toParse[i] !== '-') {\r\n\t\t\t\t\tcolor += toParse[i];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcolor = '';\r\n\t\t\t\t}\r\n\t\t\t\tif (checkifhex(color)) {\r\n\t\t\t\t\tcolorsarr = [...colorsarr, color];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (colorsarr.length < 3) {\r\n\t\t\t\tcolorsarr = [...colorsarr, ...genColorsMonochromatic(3 - colorsarr.length)];\r\n\t\t\t} else if (colorsarr.length > 5) {\r\n\t\t\t\tcolorsarr = colorsarr.slice(5);\r\n\t\t\t}\r\n\t\t\tprops.history.replace('/generator');\r\n\t\t\tsetColors(colorsarr);\r\n\t\t\tsetColorNumber(colorsarr.length);\r\n\t\t} else {\r\n\t\t\tsetColors([]);\r\n\t\t}\r\n\t}, [location, props.history]);\r\n\r\n\treturn (\r\n\t\t<Card className='Generator' elevation={2}>\r\n\t\t\t<AppHeader color={props.color} />\r\n\t\t\t<GeneratorToolbar color={props.color} setGenMethod={(e) => setGenMethod(e)} />\r\n\t\t\t<GeneratorPalette \r\n\t\t\t\tkey={genMethod} \r\n\t\t\t\tgenMethod={genMethod} \r\n\t\t\t\tcolorsarr={colors}\r\n\t\t\t\tcolornumber={colorNumber}\r\n\t\t\t/>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Generator;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, HashRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport MainPage from './components/mainpage.component';\r\nimport Generator from './components/generator.component';\r\n\r\nfunction App() {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => hue > 359 ? setHue(0) : setHue(hue + 1), 100);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path='/'>\r\n        <Redirect to='/' />\r\n      </Route>\r\n      <Route \r\n        exact path='/' \r\n        render={(props) => (\r\n                <MainPage {...props} color={hue} />\r\n               )}\r\n      />\r\n      <Route path='/generator'>\r\n        <Redirect to={'/generator'}/>\r\n      </Route>\r\n      <Route \r\n        path='/generator'\r\n        render={(props) => (\r\n                <Generator {...props} color={hue} />\r\n               )}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}