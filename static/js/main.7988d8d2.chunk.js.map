{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","useState","visible","setVisible","style","borderRadius","className","text","width","height","dense","onClick","Modal","e","Body","React","hue","saturation","luminosity","alpha","color","setColor","fontSize","outlined","elevation","onInput","prev","variant","props","onClose","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAUA,SAASA,IACP,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,OACE,eAAC,IAAD,CAAMC,MAAO,CAAEC,aAAc,eAA7B,UACE,yBAAQC,UAAU,aAAlB,UACE,gCAAK,oBAAIA,UAAU,OAAd,kBAA8B,oBAAIA,UAAU,wBAAd,uBACnC,qBAAKA,UAAU,aAAf,SACE,+BACE,6BAAI,cAAC,IAAD,CAAQA,UAAU,sBAAsBC,MAAI,EAA5C,wBACJ,6BAAI,cAAC,IAAD,CAASH,MAAO,CAACI,MAAM,MAAOC,OAAO,QAASC,OAAK,MACvD,6BAAI,cAAC,IAAD,CAAQJ,UAAU,sBAAsBC,MAAI,EAA5C,uBACJ,6BAAI,cAAC,IAAD,CAAQD,UAAU,yCAAlB,4BAGR,cAAC,IAAD,CAAKA,UAAU,cAAcK,QAAS,kBAAMR,GAAW,IAAvD,SACI,sBAAMG,UAAU,mBAAhB,yBAGN,cAACM,EAAD,CAAOT,WAAc,SAACU,GAAD,OAAOV,EAAWU,IAAIX,QAAWA,OAK5D,SAASY,IACP,MAA0BC,IAAMd,SAAS,CACvCe,IAAK,GACLC,WAAY,IACZC,WAAY,GACZC,MAAO,IAJT,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,0BAASf,UAAU,WAAnB,UACE,0BAASA,UAAU,gBAAnB,UACE,oBAAGA,UAAU,iBAAb,sCAAuD,mBAAGA,UAAU,mBAAb,mBAAvD,0BACA,mBAAGA,UAAU,oBAAb,4EACA,cAAC,IAAD,CAAQA,UAAU,mCAAmCF,MAAO,CAACK,OAAO,QAApE,SACE,oBAAIL,MAAO,CAACkB,SAAU,QAAtB,yBAEF,cAAC,IAAD,CAAQhB,UAAU,0CAA0CF,MAAO,CAACK,OAAO,QAASc,UAAQ,EAA5F,SACE,oBAAInB,MAAO,CAACkB,SAAU,QAAtB,2BAGJ,yBAAShB,UAAU,iBAAnB,SACE,eAAC,IAAD,CAAMA,UAAU,qBAAqBkB,UAAW,EAAhD,UACE,cAAC,IAAD,CAAMlB,UAAU,qBAAqBkB,UAAW,IAChD,cAAC,IAAD,2BAAiBJ,GAAjB,IAAwBK,QAxBhB,SAAAT,GACdK,GAAS,SAAAK,GACP,OAAO,2BACFA,GADL,IAEEV,YAoB4CW,QAAS,wBAO7D,SAASf,EAAMgB,GACb,OACE,cAAC,IAAD,CAAQC,QAAS,kBAAMD,EAAMzB,YAAW,IAAQD,QAAS0B,EAAM1B,QAA/D,SACE,eAAC,IAAD,CAAOI,UAAU,YAAjB,UACE,cAAC,IAAD,CAAQC,MAAI,EAAZ,sBACA,cAAC,IAAD,CAAQA,MAAI,EAAZ,qBACA,cAAC,IAAD,CAAQD,UAAU,mBAAlB,qBACA,cAAC,IAAD,CAAQK,QAAS,kBAAMiB,EAAMzB,YAAW,IAAxC,wBAeO2B,MATf,WACE,OACE,eAAC,IAAD,CAAMxB,UAAU,MAAMkB,UAAW,EAAjC,UACE,cAACxB,EAAD,IACA,cAACc,EAAD,QC9ESiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7988d8d2.chunk.js","sourcesContent":["import './App.css';\r\n\r\nimport React, { useState } from 'react';\r\n\r\nimport { Button, Card, Dialog, Divider, Fab } from 'ui-neumorphism'\r\nimport 'ui-neumorphism/dist/index.css'\r\n\r\nimport ColorPicker from '@radial-color-picker/react-color-picker';\r\nimport '@radial-color-picker/react-color-picker/dist/react-color-picker.min.css';\r\n\r\nfunction Header() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '8px 8px 0 0'}}>\r\n      <header className=\"App-header\">\r\n        <div><h1 className=\"Logo\">poli</h1><h1 className=\"Logo Color-changeable\">chroma</h1></div>\r\n        <nav className=\"Nav-header\">\r\n          <ul>\r\n            <li><Button className=\"Animate-shadow-text\" text>Generate</Button></li>\r\n            <li><Divider style={{width:'4px', height:'100%'}} dense /></li>\r\n            <li><Button className=\"Animate-shadow-text\" text>Sign in</Button></li>\r\n            <li><Button className=\"Color-changeable Animate-shadow-button\">Sign up</Button></li>\r\n          </ul>\r\n        </nav>\r\n        <Fab className=\"Burger-menu\" onClick={() => setVisible(true)}>\r\n            <span className=\"Color-changeable\">&#9776;</span>\r\n        </Fab>\r\n      </header>\r\n      <Modal setVisible = {(e) => setVisible(e)} visible = {visible}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nfunction Body() {\r\n  const [color, setColor] = React.useState({\r\n    hue: 90,\r\n    saturation: 100,\r\n    luminosity: 50,\r\n    alpha: 1,\r\n  });\r\n\r\n  const onInput = hue => {\r\n    setColor(prev => {\r\n      return {\r\n        ...prev,\r\n        hue,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <section className=\"App-body\">\r\n      <section className=\"App-body-left\">\r\n        <p className=\"App-body-title\">Fast and easy neumorphic <b className=\"Color-changeable\">color</b> palettes generator!</p>\r\n        <p className=\"App-body-subtitle\">Create and export perfect palette for your art project easily.</p>\r\n        <Button className=\"App-body-button Color-changeable\" style={{height:'55px'}}>\r\n          <h1 style={{fontSize: '18px'}}>Generate!</h1>\r\n        </Button>\r\n        <Button className=\"App-body-button Border-color-changeable\" style={{height:'55px'}} outlined>\r\n          <h1 style={{fontSize: '18px'}}>Explore!</h1>\r\n        </Button>\r\n      </section>\r\n      <section className=\"App-body-right\">\r\n        <Card className=\"Color-picker-outer\" elevation={2}>\r\n          <Card className=\"Color-picker-inner\" elevation={2}></Card>\r\n          <ColorPicker {...color} onInput={onInput} variant={'persistent'} />\r\n        </Card>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <Dialog onClose={() => props.setVisible(false)} visible={props.visible}>\r\n      <Card  className='Modal-nav'>\r\n        <Button text>Generate</Button>\r\n        <Button text>Sign in</Button>\r\n        <Button className=\"Color-changeable\">Sign up</Button>\r\n        <Button onClick={() => props.setVisible(false)}>Close</Button>\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Card className=\"App\" elevation={2}>\r\n      <Header />\r\n      <Body />\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}