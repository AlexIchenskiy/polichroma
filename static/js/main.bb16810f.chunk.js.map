{"version":3,"sources":["components/mobilemodal.component.js","components/appheader.component.js","components/appbody.component.js","components/mainpage.component.js","components/generatortoolbar.component.js","utils/padzero.util.js","utils/invertcolor.util.js","components/generatortoolset.component.js","components/generatorpalette.component.js","components/generator.component.js","App.js","reportWebVitals.js","index.js"],"names":["MobileModal","props","useState","color","colorHsl","setColorHsl","useEffect","document","getElementsByTagName","style","overflow","visible","className","flat","to","onClick","setVisible","text","AppHeader","borderRadius","width","height","dense","backgroundColor","e","AppBody","hue","fontSize","outlined","elevation","onInput","newHue","variant","MainPage","GeneratorToolbar","window","innerWidth","setWidth","isMobileWidth","setIsMobileWidth","handleWindowSizeChange","addEventListener","removeEventListener","inset","isMobile","padZero","str","len","Array","join","slice","invertColor","hex","bw","indexOf","length","Error","r","parseInt","g","b","toString","GeneratorToolset","styles","textColor","GeneratorPalette","genColorsRandom","colors","setColors","elements","setElements","n","i","push","Math","random","handleKeyPress","target","keyCode","handleGenerate","s","j","console","log","toUpperCase","handlers","useSwipeable","onSwipedUp","Generator","App","setHue","interval","setInterval","clearInterval","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb16810f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, Dialog } from 'ui-neumorphism';\r\n\r\nfunction MobileModal(props) {\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  useEffect(() => {\r\n    document.getElementsByTagName('html')[0].style.overflow = props.visible ? 'hidden' : 'initial';\r\n  }, [props.visible]);\r\n\r\n  return (\r\n    <Card className={props.visible ? 'Modal-nav Modal-nav-opened' : 'Modal-nav Modal-nav-closed'} flat >\r\n      <Link to='/' className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Home</Button></Link>\r\n      <Link to=\"/generator\" className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Generate</Button></Link>\r\n      <Button text><p style={{color: colorHsl}}>Explore</p></Button>\r\n      <Button text>Sign in</Button>\r\n      <Button><p style={{color: colorHsl}}>Sign up</p></Button>\r\n      <Button onClick={() => props.setVisible(false)}>Close</Button>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default MobileModal;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, Divider } from 'ui-neumorphism';\r\n\r\nimport MobileModal from './mobilemodal.component';\r\n\r\nfunction AppHeader(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <Card style={{borderRadius: 0}}>\r\n      <header className=\"App-header\">\r\n        <Link to=\"\" className=\"Link-nostyle Link-logo\"><div><h1 className=\"Logo\">poli</h1><h1 className=\"Logo\" style={{color: colorHsl}}>chroma</h1></div></Link>\r\n        <nav className=\"Nav-header\">\r\n          <ul>\r\n            <li><Link to=\"/generator\" className=\"Link-nostyle\"><Button text>Generate</Button></Link></li>\r\n            <li><Divider style={{width:'4px', height:'100%'}} dense /></li>\r\n            <li><Button text>Sign in</Button></li>\r\n            <li><Button><p style={{color: colorHsl}}>Sign up</p></Button></li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"Burger-menu\" onClick={() => setVisible(!visible)}>\r\n            <div style={{backgroundColor: colorHsl}} \r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n            <div style={{backgroundColor: colorHsl}}\r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n            <div style={{backgroundColor: colorHsl}}\r\n                 className={visible ? 'active' : 'inactive'} ></div>\r\n        </div>\r\n      </header>\r\n      <MobileModal color={props.color} setVisible = {(e) => setVisible(e)} visible = {visible}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card } from 'ui-neumorphism';\r\n\r\nimport ColorPicker from '@radial-color-picker/react-color-picker';\r\nimport '@radial-color-picker/react-color-picker/dist/react-color-picker.min.css';\r\n\r\nfunction AppBody(props) {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  const onInput = newHue => {\r\n    return;\r\n  };\r\n\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <section className=\"App-body\">\r\n      <section className=\"App-body-left\">\r\n        <p className=\"App-body-title\">Fast and easy neumorphic <b style={{color: colorHsl}}>color</b> palettes generator!</p>\r\n        <p className=\"App-body-subtitle\">Create and export perfect palette for your art project easily.</p>\r\n        <Link to=\"/generator\" className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" style={{height:'55px'}}>\r\n            <h1 style={{fontSize: '18px', color: colorHsl}}>Generate!</h1>\r\n          </Button>\r\n        </Link>\r\n        <Link to='/' className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" color={colorHsl} style={{height: '55px'}}  outlined>\r\n            <h1 style={{fontSize: '18px'}}>Explore!</h1>\r\n          </Button>\r\n        </Link>\r\n      </section>\r\n      <section className=\"App-body-right\">\r\n        <Card className=\"Color-picker-outer\" elevation={2}>\r\n          <Card className=\"Color-picker-inner\" elevation={2}></Card>\r\n          <ColorPicker hue={hue} onInput={onInput} variant={'persistent'} />\r\n        </Card>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AppBody;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport AppBody from './appbody.component';\r\n\r\nimport 'ui-neumorphism/dist/index.css';\r\n\r\nimport '../App.css';\r\n\r\nfunction MainPage(props) {\r\n\treturn (\r\n\t\t<Card className=\"App\" elevation={2}>\r\n\t    \t<AppHeader color={props.color} />\r\n\t    \t<AppBody color={props.color} />\r\n\t  \t</Card>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","import React, { useEffect, useState } from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport isMobile from 'react-device-detect';\r\n\r\nfunction GeneratorToolbar() {\r\n\tconst [width, setWidth]       = useState(window.innerWidth);\r\n\tconst [isMobileWidth, setIsMobileWidth] = useState(width < 768);\r\n\r\n\tfunction handleWindowSizeChange() {\r\n\t\tsetWidth(window.innerWidth);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('resize', handleWindowSizeChange);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener('resize', handleWindowSizeChange);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetIsMobileWidth(width < 768);\r\n\t}, [width]);\r\n\r\n\treturn (\r\n\t\t<Card className='Generator-toolbar' style={{borderRadius: '0'}} inset >\r\n\t\t\t<h2 className='Generator-toolbar-subtitle'>\r\n\t\t\t\t{isMobile && isMobileWidth ? \"Swipe up to quickly generate a new palette!\" :\r\n\t\t\t\t\t\t\t\"Press spacebar to quickly generate a new palette!\"}\r\n\t\t\t</h2>\r\n\t\t\t<div className='Generator-toolbar-tools'>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default GeneratorToolbar;","export default function padZero(str, len) {\r\n    len = len || 2;\r\n    var zeros = new Array(len).join('0');\r\n    return (zeros + str).slice(-len);\r\n}","import padZero from \"./padzero.util\";\r\n\r\nexport default function invertColor(hex, bw) {\r\n    if (hex.indexOf('#') === 0) {\r\n        hex = hex.slice(1);\r\n    }\r\n    // convert 3-digit hex to 6-digits.\r\n    if (hex.length === 3) {\r\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n    }\r\n    if (hex.length !== 6) {\r\n        throw new Error('Invalid HEX color.');\r\n    }\r\n    var r = parseInt(hex.slice(0, 2), 16),\r\n        g = parseInt(hex.slice(2, 4), 16),\r\n        b = parseInt(hex.slice(4, 6), 16);\r\n    if (bw) {\r\n        // https://stackoverflow.com/a/3943023/112731\r\n        return (r * 0.299 + g * 0.587 + b * 0.114) > 186\r\n            ? '#000000'\r\n            : '#FFFFFF';\r\n    }\r\n    // invert color components\r\n    r = (255 - r).toString(16);\r\n    g = (255 - g).toString(16);\r\n    b = (255 - b).toString(16);\r\n    // pad each with zeros and return\r\n    return \"#\" + padZero(r) + padZero(g) + padZero(b);\r\n}","import React from 'react';\r\n\r\nfunction GeneratorToolset(props) {\r\n    let styles = {\r\n        color: props.textColor,\r\n    };\r\n\r\n\treturn (\r\n\t\t<div className = 'Generator-palette-toolset'>\r\n            <div>\r\n\r\n            </div>\r\n            <h1 style = {styles} >\r\n                {props.color}\r\n            </h1>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default GeneratorToolset;","import React, { useState, useEffect } from 'react';\r\nimport { useSwipeable } from 'react-swipeable';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport invertColor from '../utils/invertcolor.util';\r\nimport GeneratorToolset from './generatortoolset.component';\r\n\r\nfunction GeneratorPalette() {\r\n\tlet [colors, setColors]     = useState(genColorsRandom(4));\r\n\tlet [elements, setElements] = useState(null);\r\n\r\n\t//function to generate array of n random colors\r\n\tfunction genColorsRandom(n) {\r\n\t    let colors = [];\r\n\t    for (let i = 0; i < n; i++) {\r\n\t      colors.push(((Math.random() * 0xfffff * 1000000).toString(16)).slice(0, 6));\r\n\t    }\r\n\t    return colors;\r\n\t}\r\n\r\n\tlet handleKeyPress = (target) => {\r\n\t\tif(target.keyCode === 32) {\r\n\t\t\thandleGenerate();\r\n\t\t}\r\n\t}\r\n\r\n\tlet handleSwipe = () => {\r\n\t\thandleGenerate();\r\n\t}\r\n\r\n\tlet handleGenerate = () => {\r\n\t\tlet colors = genColorsRandom(4);\r\n\t\t\r\n\t\tsetColors(colors);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener(\"keypress\", handleKeyPress);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet elements = [];\r\n\r\n\t\tlet s = \"\";\r\n\t\tlet styles = [];\r\n\t\tfor (let i = 0; i < 3; i++) {\r\n\t\t\tfor (let j = 0; j < 4; j++) {\r\n\t\t\t\ts += \"%c       %c \";\r\n\t\t\t\tstyles.push(`background: #${colors[j]};`);\r\n\t\t\t\tstyles.push(\"background: null\");\r\n\t\t\t}\r\n\t\t\ts += '\\n';\r\n\t\t}\r\n\r\n\t\tconsole.log(s, ...styles);\r\n\t\tconsole.log(colors.join(\"  \"));\r\n\r\n\t\tfor (let i = 0; i < colors.length; i++) {\r\n\t\t\telements.push(\r\n\t\t\t\t<div className='Generator-palette-color' key={`#${colors[i]}`} style={{backgroundColor: `#${colors[i]}`}}>\r\n\t\t\t\t\t<GeneratorToolset \r\n\t\t\t\t\t\ttextColor = {invertColor(colors[i], 1).toUpperCase()} \r\n\t\t\t\t\t\tcolor = {colors[i].toUpperCase()}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetElements(elements);\r\n\t}, [colors]);\r\n\r\n\tconst handlers = useSwipeable({\r\n\t\tonSwipedUp: () => handleSwipe()\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className='Generator-palette-outer' elevation={2} {...handlers} >\r\n\t\t\t<Card className='Generator-palette-inner' inset >\r\n\t\t\t\t{elements}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GeneratorPalette;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport GeneratorToolbar from './generatortoolbar.component';\r\nimport GeneratorPalette from './generatorpalette.component';\r\n\r\nfunction Generator(props) {\r\n\treturn (\r\n\t\t<Card className='Generator' elevation={2}>\r\n\t\t\t<AppHeader color={props.color} />\r\n\t\t\t<GeneratorToolbar />\r\n\t\t\t<GeneratorPalette />\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Generator;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, HashRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport MainPage from './components/mainpage.component';\r\nimport Generator from './components/generator.component';\r\n\r\nfunction App() {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => hue > 359 ? setHue(0) : setHue(hue + 1), 100);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path='/'>\r\n        <Redirect to='/' />\r\n      </Route>\r\n      <Route \r\n        exact path='/' \r\n        render={(props) => (\r\n                <MainPage {...props} color={hue} />\r\n               )}\r\n      />\r\n      <Route exact path='/generator'>\r\n        <Redirect to={'/generator'}/>\r\n      </Route>\r\n      <Route \r\n        path='/generator'\r\n        render={(props) => (\r\n                <Generator {...props} color={hue} />\r\n               )}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}