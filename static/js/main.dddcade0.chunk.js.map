{"version":3,"sources":["components/mobilemodal.component.js","components/appheader.component.js","components/appbody.component.js","components/mainpage.component.js","components/generatortoolbar.component.js","components/generatorpalette.component.js","components/generator.component.js","App.js","reportWebVitals.js","index.js"],"names":["MobileModal","props","useState","color","colorHsl","setColorHsl","useEffect","onClose","setVisible","visible","className","to","onClick","text","style","AppHeader","borderRadius","width","height","dense","e","AppBody","hue","setHue","fontSize","outlined","elevation","onInput","newHue","variant","MainPage","GeneratorToolbar","GeneratorPalette","colors","window","location","pathname","slice","split","filter","el","elements","i","length","push","backgroundColor","Generator","genColorsRandom","n","Math","random","toString","document","addEventListener","target","keyCode","App","interval","setInterval","clearInterval","exact","path","render","genColors","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dddcade0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, Dialog } from 'ui-neumorphism';\r\n\r\nfunction MobileModal(props) {\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <Dialog onClose={() => props.setVisible(false)} visible={props.visible}>\r\n      <Card  className='Modal-nav'>\r\n        <Link to='/' className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Home</Button></Link>\r\n        <Link to=\"/polichroma/generator\" className='Link-nostyle Link-outer' onClick={() => props.setVisible(false)}><Button text>Generate</Button></Link>\r\n        <Button text>Sign in</Button>\r\n        <Button><p style={{color: colorHsl}}>Sign up</p></Button>\r\n        <Button onClick={() => props.setVisible(false)}>Close</Button>\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default MobileModal;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card, Divider } from 'ui-neumorphism';\r\n\r\nimport MobileModal from './mobilemodal.component';\r\n\r\nfunction AppHeader(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <Card style={{ borderRadius: '8px 8px 0 0'}}>\r\n      <header className=\"App-header\">\r\n        <Link to=\"\" className=\"Link-nostyle\"><div><h1 className=\"Logo\">poli</h1><h1 className=\"Logo\" style={{color: colorHsl}}>chroma</h1></div></Link>\r\n        <nav className=\"Nav-header\">\r\n          <ul>\r\n            <li><Link to=\"/polichroma/generator\" className=\"Link-nostyle\"><Button text>Generate</Button></Link></li>\r\n            <li><Divider style={{width:'4px', height:'100%'}} dense /></li>\r\n            <li><Button text>Sign in</Button></li>\r\n            <li><Button><p style={{color: colorHsl}}>Sign up</p></Button></li>\r\n          </ul>\r\n        </nav>\r\n        <Button className=\"Burger-menu\" onClick={() => setVisible(true)}>\r\n            <span style={{color: colorHsl}}>&#9776;</span>\r\n        </Button>\r\n      </header>\r\n      <MobileModal color={props.color} setVisible = {(e) => setVisible(e)} visible = {visible}/>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default AppHeader;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Button, Card } from 'ui-neumorphism';\r\n\r\nimport ColorPicker from '@radial-color-picker/react-color-picker';\r\nimport '@radial-color-picker/react-color-picker/dist/react-color-picker.min.css';\r\n\r\nfunction AppBody(props) {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  const onInput = newHue => {\r\n    if (newHue !== hue) {\r\n      setHue(newHue);\r\n    };\r\n  };\r\n\r\n  const [colorHsl, setColorHsl] = useState(`hsl(${props.color}, 100%, 50%)`);\r\n\r\n  useEffect(() => setColorHsl(`hsl(${props.color}, 100%, 50%)`), [props.color]);\r\n\r\n  return (\r\n    <section className=\"App-body\">\r\n      <section className=\"App-body-left\">\r\n        <p className=\"App-body-title\">Fast and easy neumorphic <b style={{color: colorHsl}}>color</b> palettes generator!</p>\r\n        <p className=\"App-body-subtitle\">Create and export perfect palette for your art project easily.</p>\r\n        <Link to=\"/polichroma/generator\" className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" style={{height:'55px'}}>\r\n            <h1 style={{fontSize: '18px', color: colorHsl}}>Generate!</h1>\r\n          </Button>\r\n        </Link>\r\n        <Link to='/' className='Link-nostyle App-body-button-link'>\r\n          <Button className=\"App-body-button\" color={colorHsl} style={{height: '55px'}}  outlined>\r\n            <h1 style={{fontSize: '18px'}}>Explore!</h1>\r\n          </Button>\r\n        </Link>\r\n      </section>\r\n      <section className=\"App-body-right\">\r\n        <Card className=\"Color-picker-outer\" elevation={2}>\r\n          <Card className=\"Color-picker-inner\" elevation={2}></Card>\r\n          <ColorPicker hue={hue} onInput={onInput} variant={'persistent'} />\r\n        </Card>\r\n      </section>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AppBody;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport AppBody from './appbody.component';\r\n\r\nimport 'ui-neumorphism/dist/index.css';\r\n\r\nimport '../App.css';\r\n\r\nfunction MainPage(props) {\r\n\treturn (\r\n\t\t<Card className=\"App\" elevation={2}>\r\n\t    \t<AppHeader color={props.color} />\r\n\t    \t<AppBody color={props.color} />\r\n\t  \t</Card>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nfunction GeneratorToolbar() {\r\n\treturn (\r\n\t\t<Card className='Generator-toolbar' style={{borderRadius: '0'}}>\r\n\t\t\t<h2 className='Generator-toolbar-subtitle'>Press spacebar to quickly generate a new palette!</h2>\r\n\t\t\t<div className='Generator-toolbar-tools'>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default GeneratorToolbar;","import React from 'react';\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nfunction GeneratorPalette() {\r\n\tlet colors = window.location.pathname.slice(22).split('-').filter((el) => el !== '');\r\n\r\n\tlet elements = [];\r\n\r\n\tfor (let i = 0; i < colors.length; i++) {\r\n\t\telements.push(\r\n\t\t\t<div className='Generator-palette-color' key={`#${colors[i]}`} style={{backgroundColor: `#${colors[i]}`}}>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='Generator-palette-outer' elevation={2}>\r\n\t\t\t<Card className='Generator-palette-inner'>\r\n\t\t\t\t{elements}\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GeneratorPalette;","import React from 'react';\r\n\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { Card } from 'ui-neumorphism';\r\n\r\nimport AppHeader from './appheader.component';\r\nimport GeneratorToolbar from './generatortoolbar.component';\r\nimport GeneratorPalette from './generatorpalette.component';\r\n\r\nfunction Generator(props) {\r\n\tfunction genColorsRandom(n) {\r\n\t    let colors = '';\r\n\t    for (let i = 0; i < n; i++) {\r\n\t      colors += (((Math.random() * 0xfffff * 1000000).toString(16)).slice(0, 6)) + '-';\r\n\t    }\r\n\t    return colors.slice(0, -1);\r\n\t}\r\n\r\n\tlet handleKeyUp = (target) => {\r\n\t\tif(target.keyCode === 32) {\r\n\t\t\t<Redirect to={'generator/' + genColorsRandom(4)} push />\r\n\t\t}\r\n\t}\r\n\r\n\tdocument.addEventListener(\"keyup\", handleKeyUp);\r\n\r\n\treturn (\r\n\t\t<Card className='Generator' elevation={2}>\r\n\t\t\t<AppHeader color={props.color} />\r\n\t\t\t<GeneratorToolbar />\r\n\t\t\t<GeneratorPalette />\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default Generator;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport MainPage from './components/mainpage.component';\r\nimport Generator from './components/generator.component';\r\n\r\nfunction App() {\r\n  const [hue, setHue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval = setInterval(() => hue > 359 ? setHue(0) : setHue(hue + 1), 100);\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  function genColors(n) {\r\n    let colors = '';\r\n    for (let i = 0; i < n; i++) {\r\n      colors += (((Math.random() * 0xfffff * 1000000).toString(16)).slice(0, 6)) + '-';\r\n    }\r\n    return colors.slice(0, -1);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact path='/'>\r\n        <Redirect to='/polichroma' />\r\n      </Route>\r\n      <Route \r\n        exact path='/polichroma' \r\n        render={(props) => (\r\n                <MainPage {...props} color={hue} />\r\n               )}\r\n      />\r\n      <Route exact path='/polichroma/generator'>\r\n        <Redirect to={'/polichroma/generator/' + genColors(4)}/>\r\n      </Route>\r\n      <Route \r\n        path='/polichroma/generator'\r\n        render={(props) => (\r\n                <Generator {...props} color={hue} />\r\n               )}\r\n      />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}